[{"/Users/elicusic/Desktop/react_project/connect-four/src/reportWebVitals.js":"1","/Users/elicusic/Desktop/react_project/connect-four/src/App.js":"2","/Users/elicusic/Desktop/react_project/connect-four/src/index.js":"3","/Users/elicusic/Desktop/react_project/connect-four/src/components/NavBar.js":"4","/Users/elicusic/Desktop/react_project/connect-four/src/containers/Game.js":"5","/Users/elicusic/Desktop/react_project/connect-four/src/containers/GameBoard.js":"6","/Users/elicusic/Desktop/react_project/connect-four/src/components/Token.js":"7","/Users/elicusic/Desktop/react_project/connect-four/src/components/TokenButton.js":"8","/Users/elicusic/Desktop/react_project/connect-four/src/containers/CardPanel.js":"9","/Users/elicusic/Desktop/react_project/connect-four/src/components/Card.js":"10","/Users/elicusic/Desktop/react_project/connect-four/src/reducers/index.js":"11","/Users/elicusic/Desktop/react_project/connect-four/src/reducers/gameReducer.js":"12","/Users/elicusic/Desktop/react_project/connect-four/src/actions/index.js":"13","/Users/elicusic/Desktop/react_project/connect-four/src/reducers/APIReducer.js":"14","/Users/elicusic/Desktop/react_project/connect-four/src/reducers/apiReducer.js":"15","/Users/elicusic/Desktop/react_project/connect-four/src/routes/HomePage.js":"16","/Users/elicusic/Desktop/react_project/connect-four/src/routes/LandingPage.js":"17","/Users/elicusic/Desktop/react_project/connect-four/src/routes/Scores.js":"18","/Users/elicusic/Desktop/react_project/connect-four/src/routes/WholeGame.js":"19","/Users/elicusic/Desktop/react_project/connect-four/src/containers/MuppetsList.js":"20","/Users/elicusic/Desktop/react_project/connect-four/src/components/MuppetLi.js":"21","/Users/elicusic/Desktop/react_project/connect-four/src/containers/Beaker.js":"22","/Users/elicusic/Desktop/react_project/connect-four/src/components/BeakerWelcomCard.js":"23"},{"size":362,"mtime":1610029898509,"results":"24","hashOfConfig":"25"},{"size":906,"mtime":1610829436069,"results":"26","hashOfConfig":"25"},{"size":604,"mtime":1610670282000,"results":"27","hashOfConfig":"25"},{"size":463,"mtime":1610829201346,"results":"28","hashOfConfig":"25"},{"size":1740,"mtime":1610745444000,"results":"29","hashOfConfig":"25"},{"size":1143,"mtime":1610745284123,"results":"30","hashOfConfig":"25"},{"size":468,"mtime":1610668864000,"results":"31","hashOfConfig":"25"},{"size":254,"mtime":1610726785000,"results":"32","hashOfConfig":"25"},{"size":646,"mtime":1610409063684,"results":"33","hashOfConfig":"25"},{"size":163,"mtime":1610410855958,"results":"34","hashOfConfig":"25"},{"size":123,"mtime":1610825347291,"results":"35","hashOfConfig":"25"},{"size":234,"mtime":1610752306231,"results":"36","hashOfConfig":"25"},{"size":991,"mtime":1610819699687,"results":"37","hashOfConfig":"25"},{"size":280,"mtime":1610816593642,"results":"38","hashOfConfig":"25"},{"size":476,"mtime":1610826047156,"results":"39","hashOfConfig":"25"},{"size":208,"mtime":1610829435236,"results":"40","hashOfConfig":"25"},{"size":1878,"mtime":1610835560556,"results":"41","hashOfConfig":"25"},{"size":192,"mtime":1610829432105,"results":"42","hashOfConfig":"25"},{"size":6337,"mtime":1610829411696,"results":"43","hashOfConfig":"25"},{"size":533,"mtime":1610831580837,"results":"44","hashOfConfig":"25"},{"size":175,"mtime":1610831720343,"results":"45","hashOfConfig":"25"},{"size":9126,"mtime":1610835396573,"results":"46","hashOfConfig":"25"},{"size":9149,"mtime":1610835389397,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1mak7t2",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/elicusic/Desktop/react_project/connect-four/src/reportWebVitals.js",[],["97","98"],"/Users/elicusic/Desktop/react_project/connect-four/src/App.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/index.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/components/NavBar.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/containers/Game.js",[],["99","100"],"/Users/elicusic/Desktop/react_project/connect-four/src/containers/GameBoard.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/components/Token.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/components/TokenButton.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/containers/CardPanel.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/components/Card.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/reducers/index.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/reducers/gameReducer.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/actions/index.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/reducers/APIReducer.js",["101"],"/Users/elicusic/Desktop/react_project/connect-four/src/reducers/apiReducer.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/routes/HomePage.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/routes/LandingPage.js",["102"],"/Users/elicusic/Desktop/react_project/connect-four/src/routes/Scores.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/routes/WholeGame.js",["103","104","105"],"import React, { Component } from 'react'\n\nclass WholeGame extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      tokens: this.initializeTokens(),\n      turn: 1,\n      over: false,\n      header: \"\"\n    }\n  }\n\n  initializeTokens() {\n    let nestedArray = []\n    for (let i = 0; i < 6; i++) {\n      let rowArray = []\n      for (let j = 0; j < 7; j++) {\n        rowArray.push(<Token row={i} column={j} color={ \"whitesmoke\" } />)\n      }\n      nestedArray.push(rowArray)  \n    }\n    return nestedArray\n  }\n\n  generateRow = (tokenArray) => {\n    let cells = tokenArray.map(token => <td className=\"cell\">{ token }</td>)\n    return cells.map(cell => cell)\n  }\n\n  handleClick = (index) => {\n        let matrix = this.state.tokens\n        let column = matrix.map(row => row[index])\n        let rowNum = column.findIndex(token => token.props.color === \"whitesmoke\")\n        this.makeMove(matrix, rowNum, index)\n        this.checkWinner({row: rowNum, col: index})\n    }\n\n    createButtons = () => {\n        let buttons = []\n        for (let i = 0; i < 7; i++){\n            buttons.push(<TokenButton number={i + 1} handleClick={() => this.handleClick(i)} />)\n        }\n        return buttons.map(map => map)\n    }\n\n    tryAgain(){\n        this.setState({\n            tokens: this.state,\n            turn: this.state.turn,\n            over: false,\n            header: \"INVALID MOVE, TRY AGAIN!!\"\n        })\n    }\n\n    notValid(col){\n        return this.state.tokens[5][col].props.color !== \"whitesmoke\"\n    }\n\n    executeMove(matrix){\n        this.setState({\n            tokens: matrix,\n            turn: this.state.turn += 1,\n            over: false,\n            header: this.state.header\n        })\n    }\n\n    makeMove = (matrix, rowNum, colNum) => {\n        if (this.notValid(colNum)){\n            this.tryAgain()\n        } else if (this.state.turn % 2 === 0){\n            matrix[rowNum][colNum] = <Token row={rowNum} column={colNum} color={ \"blue\" } />  \n            this.executeMove(matrix)\n        } else {\n            matrix[rowNum][colNum] = <Token row={rowNum} column={colNum} color={ \"red\" } />\n            this.executeMove(matrix)\n        }\n        \n    }\n\n    currentToken(index){\n        return this.state.tokens[index. row][index.col]\n    }\n\n    fourInaRow(array, currentT){\n        for (let i = 0; i < 4; i++){\n            let slicedArr = array.slice(i, (i + 4))\n            if (slicedArr.length === 4 && slicedArr.every(token => token.props.color === currentT.props.color)){\n                console.log(\"game over\") // need to implement a game over function\n                this.setState({\n                    tokens: this.state.tokens,\n                    turn: this.state.turn += 1,\n                    over: true,\n                    header: \"GAME OVER\"\n                })\n                let buttonRow = document.getElementById('button-row')\n                buttonRow.remove()                \n            }\n        }\n    }\n\n    diagonalUpRight(index){\n        let arr = []\n        let row = index.row + 1\n        let col = index.col + 1\n        while (row < 6 && col < 7){\n            arr.push(this.state.tokens[row][col])\n            row += 1\n            col += 1\n        }\n        return arr\n    }\n\n    diagonalUpLeft(index){\n        let arr = []\n        let row = index.row + 1\n        let col = index.col - 1\n        while (row < 6 && col > -1){\n            arr.push(this.state.tokens[row][col])\n            row += 1\n            col -= 1\n        }\n        return arr.reverse()\n    }\n\n    diagonalDownLeft(index){\n        let arr = []\n        let row = index.row - 1\n        let col = index.col - 1\n        while (row > -1 && col > -1){\n            arr.push(this.state.tokens[row][col])\n            row -= 1\n            col -= 1\n        }\n        return arr.reverse()\n    }\n\n    diagonalDownRight(index){\n        let arr = []\n        let row = index.row - 1\n        let col = index.col + 1\n        while (row > -1 && col > -1){\n            arr.push(this.state.tokens[row][col])\n            row -= 1\n            col += 1\n        }\n        return arr\n    }\n\n    checkDiagonalRight(index){\n        let currentT = this.currentToken(index)\n        let arr = [...this.diagonalDownLeft(index), currentT, ...this.diagonalUpRight(index)]\n        this.fourInaRow(arr, currentT)\n    }\n\n    checkDiagonalLeft(index){\n        let currentT = this.currentToken(index)\n        let arr = [...this.diagonalUpLeft(index), currentT, ...this.diagonalDownRight(index)].filter(token => token)\n        this.fourInaRow(arr, currentT)\n    }\n\n    checkVerticals(index){\n        let currentT = this.currentToken(index)\n        let column = this.state.tokens.map(row => row[index.col])\n        this.fourInaRow(column, currentT)\n    }\n\n    checkHorizontals(index){\n        let currentT = this.currentToken(index)\n        let row = this.state.tokens[index.row]\n        this.fourInaRow(row, currentT)\n    }\n\n    checkWinner(index){\n        this.checkVerticals(index)\n        this.checkHorizontals(index)\n        this.checkDiagonalRight(index)\n        this.checkDiagonalLeft(index)\n    }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.header}</h1>\n        <div id=\"game-board\">\n            <table id=\"game-board-table\">\n                <tbody>\n                    <tr className=\"row\">{ this.generateRow(this.state.tokens[5]) }</tr>\n                    <tr className=\"row\">{ this.generateRow(this.state.tokens[4]) }</tr>\n                    <tr className=\"row\">{ this.generateRow(this.state.tokens[3]) }</tr>\n                    <tr className=\"row\">{ this.generateRow(this.state.tokens[2]) }</tr>\n                    <tr className=\"row\">{ this.generateRow(this.state.tokens[1]) }</tr>\n                    <tr className=\"row\">{ this.generateRow(this.state.tokens[0]) }</tr>\n                    <tr id=\"button-row\">{ this.generateRow(this.createButtons()) }</tr>\n                </tbody>\n            </table>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst Token = ({ row, column, color }) => {\n    return <div id={`${row}-${column}`} className=\"token\" style={{backgroundColor: `${color}`}}></div>  \n}\n\nconst TokenButton = ({ number, handleClick }) => {\n    return (\n      <div className=\"token-button\" onClick={handleClick}>\n        <div className=\"button-number\">{ number }</div>\n      </div>\n    )\n}\n\nexport default WholeGame","/Users/elicusic/Desktop/react_project/connect-four/src/containers/MuppetsList.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/components/MuppetLi.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/containers/Beaker.js",["106"],"/Users/elicusic/Desktop/react_project/connect-four/src/components/BeakerWelcomCard.js",["107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"108","replacedBy":"112"},{"ruleId":"110","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":7,"nodeType":"116","messageId":"117","endLine":1,"endColumn":17},{"ruleId":"114","severity":1,"message":"118","line":6,"column":10,"nodeType":"116","messageId":"117","endLine":6,"endColumn":21},{"ruleId":"119","severity":1,"message":"120","line":64,"column":19,"nodeType":"121","endLine":64,"endColumn":29},{"ruleId":"122","severity":1,"message":"123","line":84,"column":34,"nodeType":"121","messageId":"124","endLine":84,"endColumn":44,"fix":"125"},{"ruleId":"119","severity":1,"message":"120","line":94,"column":27,"nodeType":"121","endLine":94,"endColumn":37},{"ruleId":"126","severity":1,"message":"127","line":10,"column":25,"nodeType":"128","endLine":10,"endColumn":8306},{"ruleId":"126","severity":1,"message":"127","line":10,"column":25,"nodeType":"128","endLine":10,"endColumn":8306},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],["129"],["130"],"no-unused-vars","'apiReducer' is assigned a value but never used.","Identifier","unusedVar","'MuppetsList' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-whitespace-before-property","Unexpected whitespace before property row.","unexpectedWhitespace",{"range":"131","text":"132"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",[2238,2240],"."]