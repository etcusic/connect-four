[{"/Users/elicusic/Desktop/react_project/connect-four/src/reportWebVitals.js":"1","/Users/elicusic/Desktop/react_project/connect-four/src/App.js":"2","/Users/elicusic/Desktop/react_project/connect-four/src/index.js":"3","/Users/elicusic/Desktop/react_project/connect-four/src/components/NavBar.js":"4","/Users/elicusic/Desktop/react_project/connect-four/src/containers/Scores.js":"5","/Users/elicusic/Desktop/react_project/connect-four/src/containers/Game.js":"6","/Users/elicusic/Desktop/react_project/connect-four/src/containers/LandingPage.js":"7","/Users/elicusic/Desktop/react_project/connect-four/src/containers/GameBoard.js":"8","/Users/elicusic/Desktop/react_project/connect-four/src/components/Token.js":"9","/Users/elicusic/Desktop/react_project/connect-four/src/components/TokenButton.js":"10","/Users/elicusic/Desktop/react_project/connect-four/src/containers/CardPanel.js":"11","/Users/elicusic/Desktop/react_project/connect-four/src/components/Card.js":"12","/Users/elicusic/Desktop/react_project/connect-four/src/reducers/index.js":"13","/Users/elicusic/Desktop/react_project/connect-four/src/reducers/gameReducer.js":"14","/Users/elicusic/Desktop/react_project/connect-four/src/actions/index.js":"15","/Users/elicusic/Desktop/react_project/connect-four/src/containers/WholeGame.js":"16","/Users/elicusic/Desktop/react_project/connect-four/src/reducers/APIReducer.js":"17","/Users/elicusic/Desktop/react_project/connect-four/src/reducers/apiReducer.js":"18","/Users/elicusic/Desktop/react_project/connect-four/src/containers/HomePage.js":"19"},{"size":362,"mtime":1610029898509,"results":"20","hashOfConfig":"21"},{"size":922,"mtime":1610827511716,"results":"22","hashOfConfig":"21"},{"size":604,"mtime":1610670282000,"results":"23","hashOfConfig":"21"},{"size":415,"mtime":1610827428528,"results":"24","hashOfConfig":"21"},{"size":192,"mtime":1610130416698,"results":"25","hashOfConfig":"21"},{"size":1740,"mtime":1610745444514,"results":"26","hashOfConfig":"21"},{"size":2586,"mtime":1610827220200,"results":"27","hashOfConfig":"21"},{"size":1143,"mtime":1610745284123,"results":"28","hashOfConfig":"21"},{"size":468,"mtime":1610668864000,"results":"29","hashOfConfig":"21"},{"size":254,"mtime":1610726785000,"results":"30","hashOfConfig":"21"},{"size":646,"mtime":1610409063684,"results":"31","hashOfConfig":"21"},{"size":163,"mtime":1610410855958,"results":"32","hashOfConfig":"21"},{"size":123,"mtime":1610825347291,"results":"33","hashOfConfig":"21"},{"size":234,"mtime":1610752306231,"results":"34","hashOfConfig":"21"},{"size":991,"mtime":1610819699687,"results":"35","hashOfConfig":"21"},{"size":6337,"mtime":1610760065451,"results":"36","hashOfConfig":"21"},{"size":280,"mtime":1610816593642,"results":"37","hashOfConfig":"21"},{"size":476,"mtime":1610826047156,"results":"38","hashOfConfig":"21"},{"size":208,"mtime":1610827381999,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1mak7t2",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elicusic/Desktop/react_project/connect-four/src/reportWebVitals.js",[],["80","81"],"/Users/elicusic/Desktop/react_project/connect-four/src/App.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/index.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/components/NavBar.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/containers/Scores.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/containers/Game.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/containers/LandingPage.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/containers/GameBoard.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/components/Token.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/components/TokenButton.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/containers/CardPanel.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/components/Card.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/reducers/index.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/reducers/gameReducer.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/actions/index.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/containers/WholeGame.js",["82","83","84"],"import React, { Component } from 'react'\n\nclass WholeGame extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      tokens: this.initializeTokens(),\n      turn: 1,\n      over: false,\n      header: \"\"\n    }\n  }\n\n  initializeTokens() {\n    let nestedArray = []\n    for (let i = 0; i < 6; i++) {\n      let rowArray = []\n      for (let j = 0; j < 7; j++) {\n        rowArray.push(<Token row={i} column={j} color={ \"whitesmoke\" } />)\n      }\n      nestedArray.push(rowArray)  \n    }\n    return nestedArray\n  }\n\n  generateRow = (tokenArray) => {\n    let cells = tokenArray.map(token => <td className=\"cell\">{ token }</td>)\n    return cells.map(cell => cell)\n  }\n\n  handleClick = (index) => {\n        let matrix = this.state.tokens\n        let column = matrix.map(row => row[index])\n        let rowNum = column.findIndex(token => token.props.color === \"whitesmoke\")\n        this.makeMove(matrix, rowNum, index)\n        this.checkWinner({row: rowNum, col: index})\n    }\n\n    createButtons = () => {\n        let buttons = []\n        for (let i = 0; i < 7; i++){\n            buttons.push(<TokenButton number={i + 1} handleClick={() => this.handleClick(i)} />)\n        }\n        return buttons.map(map => map)\n    }\n\n    tryAgain(){\n        this.setState({\n            tokens: this.state,\n            turn: this.state.turn,\n            over: false,\n            header: \"INVALID MOVE, TRY AGAIN!!\"\n        })\n    }\n\n    notValid(col){\n        return this.state.tokens[5][col].props.color !== \"whitesmoke\"\n    }\n\n    executeMove(matrix){\n        this.setState({\n            tokens: matrix,\n            turn: this.state.turn += 1,\n            over: false,\n            header: this.state.header\n        })\n    }\n\n    makeMove = (matrix, rowNum, colNum) => {\n        if (this.notValid(colNum)){\n            this.tryAgain()\n        } else if (this.state.turn % 2 === 0){\n            matrix[rowNum][colNum] = <Token row={rowNum} column={colNum} color={ \"blue\" } />  \n            this.executeMove(matrix)\n        } else {\n            matrix[rowNum][colNum] = <Token row={rowNum} column={colNum} color={ \"red\" } />\n            this.executeMove(matrix)\n        }\n        \n    }\n\n    currentToken(index){\n        return this.state.tokens[index. row][index.col]\n    }\n\n    fourInaRow(array, currentT){\n        for (let i = 0; i < 4; i++){\n            let slicedArr = array.slice(i, (i + 4))\n            if (slicedArr.length === 4 && slicedArr.every(token => token.props.color === currentT.props.color)){\n                console.log(\"game over\") // need to implement a game over function\n                this.setState({\n                    tokens: this.state.tokens,\n                    turn: this.state.turn += 1,\n                    over: true,\n                    header: \"GAME OVER\"\n                })\n                let buttonRow = document.getElementById('button-row')\n                buttonRow.remove()                \n            }\n        }\n    }\n\n    diagonalUpRight(index){\n        let arr = []\n        let row = index.row + 1\n        let col = index.col + 1\n        while (row < 6 && col < 7){\n            arr.push(this.state.tokens[row][col])\n            row += 1\n            col += 1\n        }\n        return arr\n    }\n\n    diagonalUpLeft(index){\n        let arr = []\n        let row = index.row + 1\n        let col = index.col - 1\n        while (row < 6 && col > -1){\n            arr.push(this.state.tokens[row][col])\n            row += 1\n            col -= 1\n        }\n        return arr.reverse()\n    }\n\n    diagonalDownLeft(index){\n        let arr = []\n        let row = index.row - 1\n        let col = index.col - 1\n        while (row > -1 && col > -1){\n            arr.push(this.state.tokens[row][col])\n            row -= 1\n            col -= 1\n        }\n        return arr.reverse()\n    }\n\n    diagonalDownRight(index){\n        let arr = []\n        let row = index.row - 1\n        let col = index.col + 1\n        while (row > -1 && col > -1){\n            arr.push(this.state.tokens[row][col])\n            row -= 1\n            col += 1\n        }\n        return arr\n    }\n\n    checkDiagonalRight(index){\n        let currentT = this.currentToken(index)\n        let arr = [...this.diagonalDownLeft(index), currentT, ...this.diagonalUpRight(index)]\n        this.fourInaRow(arr, currentT)\n    }\n\n    checkDiagonalLeft(index){\n        let currentT = this.currentToken(index)\n        let arr = [...this.diagonalUpLeft(index), currentT, ...this.diagonalDownRight(index)].filter(token => token)\n        this.fourInaRow(arr, currentT)\n    }\n\n    checkVerticals(index){\n        let currentT = this.currentToken(index)\n        let column = this.state.tokens.map(row => row[index.col])\n        this.fourInaRow(column, currentT)\n    }\n\n    checkHorizontals(index){\n        let currentT = this.currentToken(index)\n        let row = this.state.tokens[index.row]\n        this.fourInaRow(row, currentT)\n    }\n\n    checkWinner(index){\n        this.checkVerticals(index)\n        this.checkHorizontals(index)\n        this.checkDiagonalRight(index)\n        this.checkDiagonalLeft(index)\n    }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.header}</h1>\n        <div id=\"game-board\">\n            <table id=\"game-board-table\">\n                <tbody>\n                    <tr className=\"row\">{ this.generateRow(this.state.tokens[5]) }</tr>\n                    <tr className=\"row\">{ this.generateRow(this.state.tokens[4]) }</tr>\n                    <tr className=\"row\">{ this.generateRow(this.state.tokens[3]) }</tr>\n                    <tr className=\"row\">{ this.generateRow(this.state.tokens[2]) }</tr>\n                    <tr className=\"row\">{ this.generateRow(this.state.tokens[1]) }</tr>\n                    <tr className=\"row\">{ this.generateRow(this.state.tokens[0]) }</tr>\n                    <tr id=\"button-row\">{ this.generateRow(this.createButtons()) }</tr>\n                </tbody>\n            </table>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst Token = ({ row, column, color }) => {\n    return <div id={`${row}-${column}`} className=\"token\" style={{backgroundColor: `${color}`}}></div>  \n}\n\nconst TokenButton = ({ number, handleClick }) => {\n    return (\n      <div className=\"token-button\" onClick={handleClick}>\n        <div className=\"button-number\">{ number }</div>\n      </div>\n    )\n}\n\nexport default WholeGame","/Users/elicusic/Desktop/react_project/connect-four/src/reducers/APIReducer.js",["85"],"/Users/elicusic/Desktop/react_project/connect-four/src/reducers/apiReducer.js",[],"/Users/elicusic/Desktop/react_project/connect-four/src/containers/HomePage.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":64,"column":19,"nodeType":"92","endLine":64,"endColumn":29},{"ruleId":"93","severity":1,"message":"94","line":84,"column":34,"nodeType":"92","messageId":"95","endLine":84,"endColumn":44,"fix":"96"},{"ruleId":"90","severity":1,"message":"91","line":94,"column":27,"nodeType":"92","endLine":94,"endColumn":37},{"ruleId":"97","severity":1,"message":"98","line":1,"column":7,"nodeType":"99","messageId":"100","endLine":1,"endColumn":17},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-whitespace-before-property","Unexpected whitespace before property row.","unexpectedWhitespace",{"range":"103","text":"104"},"no-unused-vars","'apiReducer' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",[2238,2240],"."]